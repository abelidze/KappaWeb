# No boring start messages
startup_message off

# Enable utf8
defutf8 on

# Visual Bell (no flash)
vbell off

# Caption... for more see: man
# caption always ' %{-b dd}%-w%{cd}%n* %t%{-}%+w %{cd}%-=(%l) %d/%m %c%{-} '
# caption always "%{= kc}%H (system load: %l)%-21=%{= .m}%D %d.%m.%Y %0c"
caption always "%3n %t%? @%u%?%? [%h]%?%=%c"

# Last line is status: green hostname, window list in cyan, and time and date right aligned:
hardstatus alwayslastline "%{=b}%{G}%H: %{C}%w %=%{G}%D, %m/%d %C%a"
# This status is the same as the above, except it puts "<username>@" in front of the hostname
# hardstatus alwayslastline "%{=b}%{G}Screen @ %0`@%H: %{C}%w %=%{G}%D, %m/%d"

# hardstatus off
# hardstatus alwayslastline
# hardstatus string '%{= kG}[ %{G}%H %{g}][%= %{= kw}%?%-Lw%?%{r}(%{W}%n*%f%t%?(%u)%?%{r})%{w}%?%+Lw%?%?%= %{g}][%{B} %m-%d %{W} %c %{g}]'

# Avoid window size change
termcapinfo xterm* 'is=\E[r\E[m\E[2J\E[H\E[?7h\E[?1;4;6l'

# Maximum count of saved lines
defscrollback 1024

# Detach when lost connection to ssh
autodetach on

# Cleaning display|screen after man and etc...
altscreen on

# Run into bash, alternative: shell -${SHELL}
shell -bash

# Error handling
nethack on

# By default, screen uses an 8-color terminal emulator. Use the following line to enable more colors, which is useful if you are using a more-capable terminal emulator:
#  term screen-256color
# If this fails to render 256 colors in xterm, try the following instead:
#  attrcolor b ".I"    # allow bold colors - necessary for some reason
#  termcapinfo xterm 'Co#256:AB=\E[48;5;%dm:AF=\E[38;5;%dm'   # tell screen how to set colors. AB = background, AF=foreground
#  defbce on    # use current bg color for erased chars

##########KappaWeb##########
layout new
split
resize -5
split -v
screen -t "Redis" sh -c "cd ..; redis-server redis-unix.conf"
select 0
focus
resize +12
screen -t "Celery" sh -c "cd ..; sleep 2; celery worker -A backend.api --loglevel=info"
select 1
focus
split -v
screen -t "KappaDBMS" sh -c "bash"
select 2
focus
resize +12
screen -t "WebApp" sh -c "sleep 3; ./loopbot.sh"
select 3
#detach
########End of script########

# Save our splitted screen
# layout save default

##   Keybindings   ##
## remove some key bindings
# bind k
# bind W
# bind ^k
# bind .
# bind ^\
# bind \\
# bind ^h
# bind h
## make them safer
# bind 'K' kill
# bind 'W' windowlist
# bind 'V' vert_split
# F7='k7', F8='k8', F9='k9', F10='k;', F11='F1', F12='F2'
# Good things to bind to hotkeys:
#  prev (go to previous screen)
#  next (go to next screen)
#  kill (kill this window)
#  screen (create a new window)
#  title (rename the current window)
#  detach (detach this session from this terminal)
#
bind w windowlist
#
# bindkey -k k1 select 0
# bindkey -k k2 select 1
# bindkey -k k3 select 2
# bindkey -k k4 select 3
bindkey "^[[11~" select 0
bindkey "^[[12~" select 1
bindkey "^[[13~" select 2
bindkey "^[[14~" select 3
# bindkey "^[[15~" select 4
# bindkey "^[[17~" select 5
# bindkey "^[[18~" select 6
# bindkey "^[[19~" select 7
# bindkey "^[[20~" select 8
# bindkey "^[[21~" select 9
# bindkey "^[[23~" select 10
# bindkey "^[[24~" select 11
bindkey -k k5 prev
bindkey -k k6 next

bindkey -k F1 focus prev
bindkey -k F2 focus next
#  
#  bindkey -k k7 title
#  
#  bindkey -k k8 screen
#  bindkey -k k9 kill
#
# F8 to turn the status bar off
bindkey -k k8 hardstatus alwayslastline
# F9 to turn the status bar on 
bindkey -k k9 hardstatus alwaysignore

# ^a + is inc window size by 3 | ^a is dec window size by 1
bind + resize +3
bind - resize -1
